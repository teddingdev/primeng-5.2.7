{"version":3,"sources":["./src/app/showcase/components/paginator/paginatordemo-routing.module.ts","./src/app/showcase/components/paginator/paginatordemo.html","./src/app/showcase/components/paginator/paginatordemo.module.ts","./src/app/showcase/components/paginator/paginatordemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACE;AAY9C;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QAVtC,uEAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qEAAY,CAAC,QAAQ,CAAC;oBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,qEAAa,EAAC;iBAClC,CAAC;aACF;YACD,OAAO,EAAE;gBACR,qEAAY;aACZ;SACD,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;ACdvC,woBAAwoB,qBAAqB,0BAA0B,gMAAgM,eAAe,IAAI,gBAAgB,kQAAkQ,oDAAoD,IAAI,gBAAgB,sRAAsR,uEAAuE,IAAI,gBAAgB,oRAAoR,wFAAwF,IAAI,gBAAgB,wtJAAwtJ,sFAAsF,IAAI,gBAAgB,qHAAqH,8BAA8B,8NAA8N,UAAU,k6EAAk6E,wFAAwF,IAAI,gBAAgB,qE;;;;;;;;;;;;;;;;;;;;;;;ACArnT;AACE;AACC;AAC4B;AACF;AACN;AACwB;AAc1F;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAZ/B,uEAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qEAAY;gBACZ,iGAA0B;gBACpB,wFAAe;gBACf,kFAAa;gBACb,0GAAqB;aAC3B;YACD,YAAY,EAAE;gBACb,qEAAa;aACb;SACD,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;ACpBQ;AAKxC;IAAA;IAEA,CAAC;IAFY,aAAa;QAHzB,wEAAS,CAAC;;SAEV,CAAC;OACW,aAAa,CAEzB;IAAD,oBAAC;CAAA;AAFyB","file":"paginatordemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {PaginatorDemo} from './paginatordemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: PaginatorDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class PaginatorDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/paginator/paginatordemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Paginator</span>\\n        <span>Paginator is a generic widget to display content in paged format.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation ui-fluid\\\">\\n    <p-paginator [rows]=\\\"10\\\" [totalRecords]=\\\"120\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\"></p-paginator>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;PaginatorModule&#125; from 'primeng/paginator';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Paginator is defined using p-paginator element.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n            <h3>Rows and TotalRecords</h3>\\n            <p>Rows and TotalRecords define how many pages the paginator should display. Paginator below will have 10 pages.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator [rows]=\\\"10\\\" [totalRecords]=\\\"100\\\"&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n\\n            <h3>PageLinks</h3>\\n            <p>PageLinks provide shortcuts to jump to a specific page, use pageLinkSize property to define the number of links to display. Default is 5.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator [rows]=\\\"10\\\" [totalRecords]=\\\"100\\\" pageLinkSize=\\\"3\\\"&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n\\n            <h3>Rows Per Page</h3>\\n            <p>Number of items per page can be changed by the user using a dropdown if you define rowsPerPageOptions as an array of possible values.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator [rows]=\\\"10\\\" [totalRecords]=\\\"120\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\"&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>totalRecords</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Number of total records.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rows</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Data count to display per page.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>first</td>\\n                            <td>number</td>\\n                            <td>0</td>\\n                            <td>Zero-relative number of the first row to be displayed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>pageLinkSize</td>\\n                            <td>number</td>\\n                            <td>5</td>\\n                            <td>Number of page links to display.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>rowsPerPageOptions</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>Array of integer values to display inside rows per page dropdown.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>alwaysShow</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to show it even there is only one page.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>templateLeft</td>\\n                            <td>TemplateRef</td>\\n                            <td>null</td>\\n                            <td>Template instance to inject into the left side of the paginator.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>templateRight</td>\\n                            <td>TemplateRef</td>\\n                            <td>null</td>\\n                            <td>Template instance to inject into the right side of the paginator.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>dropdownAppendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the dropdown overlay, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Parameters</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onPageChange</td>\\n                            <td>event.first: Index of first record <br>\\n                                event.rows: Number of rows to display in new page <br>\\n                                event.page: Index of the new page <br>\\n                                event.pageCount: Total number of pages <br></td>\\n                            <td>Callback to invoke when page changes, the event object contains information about the new state.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator [rows]=\\\"10\\\" totalRecords=\\\"100\\\" (onPageChange)=\\\"paginate($event)\\\"&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyComponent &#123;\\n\\n    paginate(event) &#123;\\n        //event.first = Index of the first record\\n        //event.rows = Number of rows to display in new page\\n        //event.page = Index of the new page\\n        //event.pageCount = Total number of pages\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Element</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-paginator</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-first</td>\\n                            <td>First page element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-prev</td>\\n                            <td>Previous page element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-pages</td>\\n                            <td>Container of page links.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-page</td>\\n                            <td>A page link.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-next</td>\\n                            <td>Next page element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-last</td>\\n                            <td>Last page element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-paginator-rpp-options</td>\\n                            <td>Rows per page dropdown.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/paginator\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-paginator [rows]=\\\"10\\\" [totalRecords]=\\\"120\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\"&gt;&lt;/p-paginator&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/paginator/paginatordemo.html\n// module id = ./src/app/showcase/components/paginator/paginatordemo.html\n// module chunks = paginatordemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PaginatorDemo} from './paginatordemo';\nimport {PaginatorDemoRoutingModule} from './paginatordemo-routing.module';\nimport {PaginatorModule} from '../../../components/paginator/paginator';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPaginatorDemoRoutingModule,\n        PaginatorModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tPaginatorDemo\n\t]\n})\nexport class PaginatorDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/paginator/paginatordemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './paginatordemo.html'\n})\nexport class PaginatorDemo {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/paginator/paginatordemo.ts"],"sourceRoot":"webpack:///"}