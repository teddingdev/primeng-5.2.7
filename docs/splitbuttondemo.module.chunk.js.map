{"version":3,"sources":["./src/app/showcase/components/splitbutton/splitbuttondemo-routing.module.ts","./src/app/showcase/components/splitbutton/splitbuttondemo.html","./src/app/showcase/components/splitbutton/splitbuttondemo.module.ts","./src/app/showcase/components/splitbutton/splitbuttondemo.ts"],"names":[],"mappings":"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","file":"splitbuttondemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SplitButtonDemo} from './splitbuttondemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SplitButtonDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SplitButtonDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/splitbutton/splitbuttondemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">SplitButton</span>\\n        <span>SplitButton groups a set of commands in an overlay with a default command.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\n    \\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"></p-splitButton>\\n    \\n    <h3>Severities</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"></p-splitButton>\\n    \\n    <h3>RTL</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"></p-splitButton>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n                    <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SplitButtonModule&#125; from 'primeng/splitbutton';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>SplitButton has a default command button and a collection of menuitems to be displayed in an overlay.</p>\\n            \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>MenuModel API</h3>\\n            <p>SplitButton uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n    \\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>label</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Text of the button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>icon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the icon.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>iconPos</td>\\n                            <td>string</td>\\n                            <td>left</td>\\n                            <td>Position of the icon, valid values are \\\"left\\\" and \\\"right\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyle</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the component should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>dir</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Indicates the direction of the element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when default command button is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onDropdownClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when dropdown button is clicked.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n          <h3>Severity</h3>\\n          <p>Different color options are available to define severity levels.</p>\\n\\n          <ul>\\n            <li>.ui-button-secondary</li>\\n            <li>.ui-button-success</li>\\n            <li>.ui-button-info</li>\\n            <li>.ui-button-warning</li>\\n            <li>.ui-button-danger</li>\\n          </ul>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>. SplitButton uses\\n            button and menu components internally, refer to their documentation for the detailed style list.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-splitbutton</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-splitbutton-button</td>\\n                            <td>Dropdown button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu</td>\\n                            <td>Overlay menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/splitbutton\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\n\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;Severities&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;RTL&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SplitButtonDemo implements OnInit &#123;\\n\\n    msgs: Message[] = [];\\n    \\n    items: MenuItem[];\\n    \\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;label: 'Update', icon: 'fa-refresh', command: () => &#123;\\n                this.update();\\n            &#125;&#125;,\\n            &#123;label: 'Delete', icon: 'fa-close', command: () => &#123;\\n                this.delete();\\n            &#125;&#125;,\\n            &#123;label: 'Angular.io', icon: 'fa-link', url: 'http://angular.io'&#125;,\\n            &#123;label: 'Theming', icon: 'fa-paint-brush', routerLink: ['/theming']&#125;\\n        ];\\n    &#125;\\n\\n    save() &#123;\\n        this.msgs = [];\\n        this.msgs.push(&#123;severity:'info', summary:'Success', detail:'Data Saved'&#125;);\\n    &#125;\\n    \\n    update() &#123;\\n        this.msgs = [];\\n        this.msgs.push(&#123;severity:'info', summary:'Success', detail:'Data Updated'&#125;);\\n    &#125;\\n    \\n    delete() &#123;\\n        this.msgs = [];\\n        this.msgs.push(&#123;severity:'info', summary:'Success', detail:'Data Deleted'&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </ p-tabPanel>\\n     </p-tabView >\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/splitbutton/splitbuttondemo.html\n// module id = ./src/app/showcase/components/splitbutton/splitbuttondemo.html\n// module chunks = splitbuttondemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SplitButtonDemo} from './splitbuttondemo';\nimport {SplitButtonDemoRoutingModule} from './splitbuttondemo-routing.module';\nimport {SplitButtonModule} from '../../../components/splitbutton/splitbutton';\nimport {GrowlModule} from '../../../components/growl/growl';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSplitButtonDemoRoutingModule,\n        SplitButtonModule,\n        GrowlModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSplitButtonDemo\n\t]\n})\nexport class SplitButtonDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/splitbutton/splitbuttondemo.module.ts","import {Component,OnInit} from '@angular/core';\nimport {Message} from '../../../components/common/api';\nimport {MenuItem} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './splitbuttondemo.html'\n})\nexport class SplitButtonDemo implements OnInit {\n\n    msgs: Message[] = [];\n    \n    items: MenuItem[];\n    \n    ngOnInit() {\n        this.items = [\n            {label: 'Update', icon: 'fa-refresh', command: () => {\n                this.update();\n            }},\n            {label: 'Delete', icon: 'fa-close', command: () => {\n                this.delete();\n            }},\n            {label: 'Angular.io', icon: 'fa-link', url: 'http://angular.io'},\n            {label: 'Theming', icon: 'fa-paint-brush', routerLink: ['/theming']}\n        ];\n    }\n\n    save() {\n        this.msgs = [];\n        this.msgs.push({severity:'info', summary:'Success', detail:'Data Saved'});\n    }\n    \n    update() {\n        this.msgs = [];\n        this.msgs.push({severity:'info', summary:'Success', detail:'Data Updated'});\n    }\n    \n    delete() {\n        this.msgs = [];\n        this.msgs.push({severity:'info', summary:'Success', detail:'Data Deleted'});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/splitbutton/splitbuttondemo.ts"],"sourceRoot":"webpack:///"}