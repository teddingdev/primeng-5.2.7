{"version":3,"sources":["./src/app/components/inputswitch/inputswitch.ts","./src/app/showcase/components/inputswitch/inputswitch.html","./src/app/showcase/components/inputswitch/inputswitchdemo-routing.module.ts","./src/app/showcase/components/inputswitch/inputswitchdemo.module.ts","./src/app/showcase/components/inputswitch/inputswitchdemo.ts"],"names":[],"mappings":"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","file":"inputswitchdemo.module.chunk.js","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,AfterViewChecked,OnChanges,Input,forwardRef,EventEmitter,Output} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\nimport {DomHandler} from '../dom/domhandler';\n\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputSwitch),\n  multi: true\n};\n\n@Component({\n    selector: 'p-inputSwitch',\n    template: `\n        <div [ngClass]=\"{'ui-inputswitch ui-widget ui-widget-content ui-corner-all': true,\n            'ui-state-disabled': disabled,'ui-inputswitch-checked':checked, 'ui-state-focus':focused}\" (click)=\"toggle($event, in)\"\n            [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-inputswitch-off\">\n                <span class=\"ui-inputswitch-offlabel\">{{offLabel}}</span>\n            </div>\n            <div class=\"ui-inputswitch-on\">\n                <span class=\"ui-inputswitch-onlabel\">{{onLabel}}</span>\n            </div>\n            <div [ngClass]=\"{'ui-inputswitch-handle ui-state-default':true, 'ui-state-focus':focused}\"></div>\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #in type=\"checkbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" aria-live=\"polite\" [attr.id]=\"inputId\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" readonly=\"readonly\" [attr.tabindex]=\"tabindex\"/>\n            </div>\n        </div>\n    `,\n    providers: [INPUTSWITCH_VALUE_ACCESSOR,DomHandler]\n})\nexport class InputSwitch implements ControlValueAccessor,AfterViewInit,AfterViewChecked {\n\n    @Input() onLabel: string = 'On';\n\n    @Input() offLabel: string = 'Off';\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() ariaLabelTemplate: string = \"InputSwitch {0}\";\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    checked: boolean = false;\n\n    focused: boolean = false;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    public container: any;\n\n    public handle: any;\n\n    public onContainer: any;\n\n    public offContainer: any;\n\n    public onLabelChild: any;\n\n    public offLabelChild: any;\n\n    public offset: any;\n    \n    public ariaLabel: string;\n    \n    public ariaLabelledBy: string;\n    \n    initialized: boolean = false;\n\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\n\n    ngAfterViewInit() {\n        this.container = this.el.nativeElement.children[0];\n        this.handle = this.domHandler.findSingle(this.el.nativeElement, 'div.ui-inputswitch-handle');\n        this.onContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-on');\n        this.offContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-off');\n        this.onLabelChild = this.domHandler.findSingle(this.onContainer,'span.ui-inputswitch-onlabel');\n        this.offLabelChild = this.domHandler.findSingle(this.offContainer,'span.ui-inputswitch-offlabel');\n    }\n    \n    ngAfterViewChecked() {\n        if(this.container && this.container.offsetParent && !this.initialized) {\n            this.render();\n        }\n    }\n    \n    render() {\n        let\tonContainerWidth =  this.domHandler.width(this.onContainer),\n            offContainerWidth = this.domHandler.width(this.offContainer),\n            spanPadding\t= this.domHandler.innerWidth(this.offLabelChild) - this.domHandler.width(this.offLabelChild),\n            handleMargins = this.domHandler.getOuterWidth(this.handle) - this.domHandler.innerWidth(this.handle);\n        \n        var containerWidth = (onContainerWidth > offContainerWidth) ? onContainerWidth : offContainerWidth,\n            handleWidth = containerWidth;\n\n        this.handle.style.width = handleWidth + 'px';\n        handleWidth = this.domHandler.width(this.handle);\n        containerWidth = containerWidth + handleWidth + 6;\n\n        var labelWidth = containerWidth - handleWidth - spanPadding - handleMargins;\n\n        this.container.style.width = containerWidth + 'px';\n        this.onLabelChild.style.width = labelWidth + 'px';\n        this.offLabelChild.style.width = labelWidth + 'px';\n        \n        //position\n        this.offContainer.style.width = (this.domHandler.width(this.container) - 5) + 'px';\n        this.offset = this.domHandler.width(this.container) - this.domHandler.getOuterWidth(this.handle);\n\n        //default value\n        if(this.checked) {\n            this.handle.style.left = this.offset + 'px';\n            this.onContainer.style.width = this.offset + 'px';\n            this.offLabelChild.style.marginRight = -this.offset + 'px';\n        }\n        else {\n            this.onContainer.style.width = 0 + 'px';\n            this.onLabelChild.style.marginLeft = -this.offset + 'px';\n        }\n        \n        this.initialized = true;\n    }\n\n    toggle(event,checkbox) {\n        if(!this.disabled) {\n            if(this.checked) {\n                this.checked = false;\n                this.uncheckUI();\n            }\n            else {\n                this.checked = true;\n                this.checkUI();\n            }\n            \n            this.onModelChange(this.checked);\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            checkbox.focus();\n        }\n    }\n\n    checkUI() {\n        this.onContainer.style.width = this.offset + 'px';\n        this.onLabelChild.style.marginLeft = 0 + 'px';\n        this.offLabelChild.style.marginRight = -this.offset + 'px';\n        this.handle.style.left = this.offset + 'px';\n        this.updateAriaLabel();\n    }\n\n    uncheckUI() {\n        this.onContainer.style.width = 0 + 'px';\n        this.onLabelChild.style.marginLeft = -this.offset + 'px';\n        this.offLabelChild.style.marginRight = 0 + 'px';\n        this.handle.style.left = 0 + 'px';\n        this.updateAriaLabel();\n    }\n\n    onFocus(event) {\n        this.focused = true;\n    }\n\n    onBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    writeValue(checked: any) : void {\n        this.checked = checked;\n        \n        if(this.initialized) {\n            if(this.checked === true)\n                this.checkUI();\n            else\n                this.uncheckUI();\n        }\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    updateAriaLabel() {\n        let pattern = /{(.*?)}/,\n        value = this.checked ? this.onLabel : this.offLabel;\n        \n        this.ariaLabel = this.ariaLabelTemplate.replace(this.ariaLabelTemplate.match(pattern)[0], value);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputSwitch],\n    declarations: [InputSwitch]\n})\nexport class InputSwitchModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/inputswitch/inputswitch.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">InputSwitch</span>\\n        <span>InputSwitch is used to select a boolean value.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic - {{checked1}}</h3>\\n    <p-inputSwitch [(ngModel)]=\\\"checked1\\\"></p-inputSwitch>\\n\\n    <h3>Labels - {{checked2}}</h3>\\n    <p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" [(ngModel)]=\\\"checked2\\\"></p-inputSwitch>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;InputSwitchModule&#125; from 'primeng/inputswitch';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Two-way binding to a boolean property is defined using the standard ngModel directive.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked\\\"&gt;&lt;/p-inputSwitch&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n    checked: boolean;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <p>As model is two-way binding enabled, setting the bound value as true displays the state as checked by default.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n   checked: boolean = true;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Model Driven Forms</h3>\\n            <p>InputSwitch can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputSwitch formControlName=\\\"enabled\\\"&gt;&lt;/p-inputSwitch&gt;\\n</code>\\n</pre>\\n\\n            <h3>Customization</h3>\\n            <p>Labels can be customized using onLabel and offLabel properties.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputSwitch onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" [(ngModel)]=\\\"val\\\"&gt;&lt;/p-inputSwitch&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onLabel</td>\\n                            <td>string</td>\\n                            <td>On</td>\\n                            <td>Label for the on state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>offLabel</td>\\n                            <td>string</td>\\n                            <td>Off</td>\\n                            <td>Label for the off state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>tabindex</td>\\n                          <td>number</td>\\n                          <td>null</td>\\n                          <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputId</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ariaLabelTemplate</td>\\n                            <td>string</td>\\n                            <td>InputSwitch &#123;0&#125;</td>\\n                            <td>The aria-label template is used to define a string that labels the current element with a template.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Parameters</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                    <tr>\\n                        <td>onChange</td>\\n                        <td>event.originalEvent: browser event<br>\\n                            event.checked: checked state as a boolean</td>\\n                        <td>Callback to invoke on state change.</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputSwitch (onChange)=\\\"handleChange($event)\\\" [(ngModel)]=\\\"val\\\"&gt;\\n</code>\\n</pre>\\n <pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n    handleChange(e) &#123;\\n        var isChecked = e.checked;\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-inputswitch</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-inputswitch-on</td>\\n                            <td>Checked state element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-inputswitch-off</td>\\n                            <td>Unchecked state element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inputswitch\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic - {{checked1}}&lt;/h3&gt;\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked1\\\"&gt;&lt;/p-inputSwitch&gt;\\n\\n&lt;h3&gt;Labels - &lt;span&gt; {{checked2}}&lt;/h3&gt;\\n&lt;p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" [(ngModel)]=\\\"checked2\\\"&gt;&lt;/p-inputSwitch&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class InputSwitchDemo &#123;\\n\\n    checked1: boolean = false;\\n\\n    checked2: boolean = true;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/inputswitch/inputswitch.html\n// module id = ./src/app/showcase/components/inputswitch/inputswitch.html\n// module chunks = inputswitchdemo.module","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {InputSwitchDemo} from './inputswitchdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: InputSwitchDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class InputSwitchDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inputswitch/inputswitchdemo-routing.module.ts","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {InputSwitchDemo} from './inputswitchdemo';\nimport {InputSwitchDemoRoutingModule} from './inputswitchdemo-routing.module';\nimport {InputSwitchModule} from '../../../components/inputswitch/inputswitch';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tInputSwitchDemoRoutingModule,\n        InputSwitchModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tInputSwitchDemo\n\t]\n})\nexport class InputSwitchDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inputswitch/inputswitchdemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './inputswitch.html'\n})\nexport class InputSwitchDemo {\n\n    checked1: boolean = false;\n\n    checked2: boolean = true;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inputswitch/inputswitchdemo.ts"],"sourceRoot":"webpack:///"}