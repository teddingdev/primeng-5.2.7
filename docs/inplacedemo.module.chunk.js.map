{"version":3,"sources":["./src/app/components/inplace/inplace.ts","./src/app/showcase/components/inplace/inplacedemo-routing.module.ts","./src/app/showcase/components/inplace/inplacedemo.html","./src/app/showcase/components/inplace/inplacedemo.module.ts","./src/app/showcase/components/inplace/inplacedemo.ts"],"names":[],"mappings":"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","file":"inplacedemo.module.chunk.js","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from '../button/button';\n\n@Component({\n    selector: 'p-inplaceDisplay',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceDisplay {}\n\n@Component({\n    selector: 'p-inplaceContent',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceContent {}\n\n@Component({\n    selector: 'p-inplace',\n    template: `\n        <div [ngClass]=\"'ui-inplace ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-inplace-display\" (click)=\"activate($event)\"\n                [ngClass]=\"{'ui-state-disabled':disabled}\" *ngIf=\"!active\">\n                <ng-content select=\"[pInplaceDisplay]\"></ng-content>\n            </div>\n            <div class=\"ui-inplace-content\" *ngIf=\"active\">\n                <ng-content select=\"[pInplaceContent]\"></ng-content>\n                <button type=\"button\" icon=\"fa-close\" pButton (click)=\"deactivate($event)\" *ngIf=\"closable\"></button>\n            </div>\n        </div>\n    `\n})\nexport class Inplace {\n        \n    @Input() active: boolean;\n    \n    @Input() closable: boolean;\n    \n    @Input() disabled: boolean;\n\n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Output() onActivate: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onDeactivate: EventEmitter<any> = new EventEmitter();\n    \n    hover: boolean;\n    \n    activate(event) {\n        if(!this.disabled) {\n            this.active = true;\n            this.onActivate.emit(event);\n        }\n    }\n    \n    deactivate(event) {\n        if(!this.disabled) {\n            this.active = false;\n            this.hover = false;\n            this.onDeactivate.emit(event);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [Inplace,InplaceDisplay,InplaceContent,ButtonModule],\n    declarations: [Inplace,InplaceDisplay,InplaceContent]\n})\nexport class InplaceModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/inplace/inplace.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {InplaceDemo} from './inplacedemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: InplaceDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class InplaceDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inplace/inplacedemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Inplace</span>\\n        <span>Inplace provides an easy to do editing and display at the same time where clicking the output displays the actual content.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-inplace closable=\\\"closable\\\" [style]=\\\"{'min-height':'30px'}\\\">\\n        <span pInplaceDisplay>\\n            Click to Edit\\n        </span>\\n        <span pInplaceContent>\\n            <input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText>\\n        </span>\\n    </p-inplace>\\n    \\n    <h3>Image</h3>\\n    <p-inplace>\\n        <span pInplaceDisplay>\\n            <span class=\\\"fa fa-picture-o\\\"></span><span style=\\\"margin-left:8px\\\">View Picture</span>\\n        </span>\\n        <span pInplaceContent>\\n            <img src=\\\"assets/showcase/images/demo/galleria/galleria5.jpg\\\" alt=\\\"Nature\\\">\\n        </span>\\n    </p-inplace>\\n    \\n    <h3>Data</h3>\\n    <p-inplace>\\n        <span pInplaceDisplay>\\n            <span class=\\\"fa fa-table\\\"></span><span style=\\\"margin-left:8px\\\">View Data</span>\\n        </span>\\n        <span pInplaceContent>\\n            <p-dataTable [value]=\\\"cars\\\">\\n                <p-column field=\\\"vin\\\" header=\\\"Vin\\\"></p-column>\\n                <p-column field=\\\"year\\\" header=\\\"Year\\\"></p-column>\\n                <p-column field=\\\"brand\\\" header=\\\"Brand\\\"></p-column>\\n                <p-column field=\\\"color\\\" header=\\\"Color\\\"></p-column>\\n            </p-dataTable>\\n        </span>\\n    </p-inplace>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;InplaceModule&#125; from 'primeng/inplace';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Inplace requires two child components having <i>pInplaceDisplay</i> and <i>pInplaceOutput</i> attributes respectively to define.</p>\\n            \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inplace&gt;\\n    &lt;span pInplaceDisplay&gt;\\n        Click to Edit\\n    &lt;/span&gt;\\n    &lt;span pInplaceContent&gt;\\n        &lt;input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText&gt;\\n    &lt;/span&gt;\\n&lt;/p-inplace&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>active</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Whether the content is displayed or not.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closable</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Displays a button to switch back to display mode.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onActivate</td>\\n                            <td>event.originalEvent: Click event</td>\\n                            <td>Activates the content.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onDeactivate</td>\\n                            <td>event.originalEvent: Click event</td>\\n                            <td>Deactivates the content.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-inplace</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-inplace-display</td>\\n                            <td>Display container</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-inplace-content</td>\\n                            <td>Content container</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        \\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inplace\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-inplace closable=\\\"closable\\\"&gt;\\n    &lt;span pInplaceDisplay&gt;\\n        Click to Edit\\n    &lt;/span&gt;\\n    &lt;span pInplaceContent&gt;\\n        &lt;input type=\\\"text\\\" value=\\\"PrimeNG\\\" pInputText&gt;\\n    &lt;/span&gt;\\n&lt;/p-inplace&gt;\\n\\n&lt;h3&gt;Image&lt;/h3&gt;\\n&lt;p-inplace&gt;\\n    &lt;span pInplaceDisplay&gt;\\n        &lt;span class=\\\"fa fa-picture-o\\\"&gt;&lt;/span&gt;&lt;span style=\\\"margin-left:8px\\\"&gt;View Picture&lt;/span&gt;\\n    &lt;/span&gt;\\n    &lt;span pInplaceContent&gt;\\n        &lt;img src=\\\"assets/showcase/images/demo/galleria/galleria5.jpg\\\" alt=\\\"Nature\\\"&gt;\\n    &lt;/span&gt;\\n&lt;/p-inplace&gt;\\n\\n&lt;h3&gt;Data&lt;/h3&gt;\\n&lt;p-inplace&gt;\\n    &lt;span pInplaceDisplay&gt;\\n        &lt;span class=\\\"fa fa-table\\\"&gt;&lt;/span&gt;&lt;span style=\\\"margin-left:8px\\\"&gt;View Data&lt;/span&gt;\\n    &lt;/span&gt;\\n    &lt;span pInplaceContent&gt;\\n        &lt;p-dataTable [value]=\\\"cars\\\"&gt;\\n            &lt;p-column field=\\\"vin\\\" header=\\\"Vin\\\"&gt;&lt;/p-column&gt;\\n            &lt;p-column field=\\\"year\\\" header=\\\"Year\\\"&gt;&lt;/p-column&gt;\\n            &lt;p-column field=\\\"brand\\\" header=\\\"Brand\\\"&gt;&lt;/p-column&gt;\\n            &lt;p-column field=\\\"color\\\" header=\\\"Color\\\"&gt;&lt;/p-column&gt;\\n        &lt;/p-dataTable&gt;\\n    &lt;/span&gt;\\n&lt;/p-inplace&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/inplace/inplacedemo.html\n// module id = ./src/app/showcase/components/inplace/inplacedemo.html\n// module chunks = inplacedemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InplaceDemo} from './inplacedemo';\nimport {InplaceDemoRoutingModule} from './inplacedemo-routing.module';\nimport {InplaceModule} from '../../../components/inplace/inplace';\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\nimport {DataTableModule} from '../../../components/datatable/datatable';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tInplaceDemoRoutingModule,\n        InplaceModule,\n        InputTextModule,\n        DataTableModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tInplaceDemo\n\t]\n})\nexport class InplaceDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inplace/inplacedemo.module.ts","import {Component,OnInit} from '@angular/core';\nimport {Car} from '../../components/domain/car';\nimport {CarService} from '../../service/carservice';\n\n@Component({\n    templateUrl: './inplacedemo.html'\n})\nexport class InplaceDemo implements OnInit {\n\n    cars: Car[];\n        \n    constructor(private carService: CarService) { }\n\n    ngOnInit() {\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/inplace/inplacedemo.ts"],"sourceRoot":"webpack:///"}