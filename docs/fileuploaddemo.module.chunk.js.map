{"version":3,"sources":["./src/app/components/fileupload/fileupload.ts","./src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","./src/app/showcase/components/fileupload/fileuploaddemo.html","./src/app/showcase/components/fileupload/fileuploaddemo.module.ts","./src/app/showcase/components/fileupload/fileuploaddemo.ts"],"names":[],"mappings":"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","file":"fileuploaddemo.module.chunk.js","sourcesContent":["import {NgModule,Component,OnInit,OnDestroy,Input,Output,EventEmitter,TemplateRef,AfterViewInit,AfterContentInit,\n            ContentChildren,QueryList,ViewChild,ElementRef,NgZone} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ButtonModule} from '../button/button';\nimport {MessagesModule} from '../messages/messages';\nimport {ProgressBarModule} from '../progressbar/progressbar';\nimport {DomHandler} from '../dom/domhandler';\nimport {Message} from '../common/message';\nimport {PrimeTemplate,SharedModule} from '../common/shared';\nimport {BlockableUI} from '../common/blockableui';\n\n@Component({\n    selector: 'p-fileUpload',\n    template: `\n        <div [ngClass]=\"'ui-fileupload ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"mode === 'advanced'\">\n            <div class=\"ui-fileupload-buttonbar ui-widget-header ui-corner-top\">\n                <span class=\"ui-fileupload-choose\" [label]=\"chooseLabel\" icon=\"fa-plus\" pButton [ngClass]=\"{'ui-state-focus': focus, 'ui-state-disabled':disabled}\"> \n                    <input #advancedfileinput type=\"file\" (change)=\"onFileSelect($event)\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n                </span>\n\n                <button *ngIf=\"!auto&&showUploadButton\" type=\"button\" [label]=\"uploadLabel\" icon=\"fa-upload\" pButton (click)=\"upload()\" [disabled]=\"!hasFiles()\"></button>\n                <button *ngIf=\"!auto&&showCancelButton\" type=\"button\" [label]=\"cancelLabel\" icon=\"fa-close\" pButton (click)=\"clear()\" [disabled]=\"!hasFiles()\"></button>\n            \n                <ng-container *ngTemplateOutlet=\"toolbarTemplate\"></ng-container>\n            </div>\n            <div #content [ngClass]=\"{'ui-fileupload-content ui-widget-content ui-corner-bottom':true}\" \n                (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\">\n                <p-progressBar [value]=\"progress\" [showValue]=\"false\" *ngIf=\"hasFiles()\"></p-progressBar>\n                \n                <p-messages [value]=\"msgs\" [enableService]=\"false\"></p-messages>\n                \n                <div class=\"ui-fileupload-files\" *ngIf=\"hasFiles()\">\n                    <div *ngIf=\"!fileTemplate\">\n                        <div class=\"ui-fileupload-row\" *ngFor=\"let file of files; let i = index;\">\n                            <div><img [src]=\"file.objectURL\" *ngIf=\"isImage(file)\" [width]=\"previewWidth\" /></div>\n                            <div>{{file.name}}</div>\n                            <div>{{formatSize(file.size)}}</div>\n                            <div><button type=\"button\" icon=\"fa-close\" pButton (click)=\"remove($event,i)\"></button></div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"fileTemplate\">\n                        <ng-template ngFor [ngForOf]=\"files\" [ngForTemplate]=\"fileTemplate\"></ng-template>\n                    </div>\n                </div>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </div>\n        </div>\n        <span class=\"ui-button ui-fileupload-choose ui-widget ui-state-default ui-corner-all ui-button-text-icon-left\" *ngIf=\"mode === 'basic'\" \n        (mouseup)=\"onSimpleUploaderClick($event)\"\n        [ngClass]=\"{'ui-fileupload-choose-selected': hasFiles(),'ui-state-focus': focus, 'ui-state-disabled':disabled}\">\n            <span class=\"ui-button-icon-left fa\" [ngClass]=\"{'fa-plus': !hasFiles()||auto, 'fa-upload': hasFiles()&&!auto}\"></span>\n            <span class=\"ui-button-text ui-clickable\">{{auto ? chooseLabel : hasFiles() ? files[0].name : chooseLabel}}</span>\n            <input #basicfileinput type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" [disabled]=\"disabled\"\n                (change)=\"onFileSelect($event)\" *ngIf=\"!hasFiles()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n        </span>\n    `,\n    providers: [DomHandler]\n})\nexport class FileUpload implements OnInit,AfterViewInit,AfterContentInit,OnDestroy,BlockableUI {\n\n    @Input() name: string;\n\n    @Input() url: string;\n\n    @Input() method: string = 'POST';\n\n    @Input() multiple: boolean;\n\n    @Input() accept: string;\n\n    @Input() disabled: boolean;\n\n    @Input() auto: boolean;\n\n    @Input() withCredentials: boolean;\n\n    @Input() maxFileSize: number;\n\n    @Input() invalidFileSizeMessageSummary: string = '{0}: Invalid file size, ';\n\n    @Input() invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.';\n\n    @Input() invalidFileTypeMessageSummary: string = '{0}: Invalid file type, ';\n\n    @Input() invalidFileTypeMessageDetail: string = 'allowed file types: {0}.';\n\n    @Input() style: string;\n\n    @Input() styleClass: string;\n\n    @Input() previewWidth: number = 50;\n\n    @Input() chooseLabel: string = 'Choose';\n\n    @Input() uploadLabel: string = 'Upload';\n\n    @Input() cancelLabel: string = 'Cancel';\n\n    @Input() showUploadButton: boolean = true;\n\n    @Input() showCancelButton: boolean = true;\n\n    @Input() mode: string = 'advanced';\n\n    @Input() customUpload: boolean;\n\n    @Output() onBeforeUpload: EventEmitter<any> = new EventEmitter();\n\n\t@Output() onBeforeSend: EventEmitter<any> = new EventEmitter();\n\n    @Output() onUpload: EventEmitter<any> = new EventEmitter();\n\n    @Output() onError: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onProgress: EventEmitter<any> = new EventEmitter();\n\n    @Output() uploadHandler: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ViewChild('advancedfileinput') advancedFileInput: ElementRef;\n\n    @ViewChild('basicfileinput') basicFileInput: ElementRef;\n\n    @ViewChild('content') content: ElementRef;\n\n    @Input() files: File[];\n\n    public progress: number = 0;\n\n    public dragHighlight: boolean;\n\n    public msgs: Message[];\n\n    public fileTemplate: TemplateRef<any>;\n\n    public contentTemplate: TemplateRef<any>;\n\n    public toolbarTemplate: TemplateRef<any>;\n\n    focus: boolean;\n\n    duplicateIEEvent: boolean;  // flag to recognize duplicate onchange event for file input\n\n    constructor(private el: ElementRef, public domHandler: DomHandler, public sanitizer: DomSanitizer, public zone: NgZone){}\n\n    ngOnInit() {\n        this.files = [];\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'file':\n                    this.fileTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'toolbar':\n                    this.toolbarTemplate = item.template;\n                break;\n\n                default:\n                    this.fileTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        if(this.mode === 'advanced') {\n            this.zone.runOutsideAngular(() => {\n                this.content.nativeElement.addEventListener('dragover', this.onDragOver.bind(this));\n            });\n        }\n    }\n\n    onFileSelect(event) {\n        if(event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n            this.duplicateIEEvent = false;\n            return;\n        }\n\n        this.msgs = [];\n        if(!this.multiple) {\n            this.files = [];\n        }\n\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        for(let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            if(!this.isFileSelected(file)){\n              if(this.validate(file)) {\n                  if(this.isImage(file)) {\n                      file.objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\n                  }\n\n                  this.files.push(files[i]);\n              }\n            }\n        }\n\n        this.onSelect.emit({originalEvent: event, files: files});\n\n        if(this.hasFiles() && this.auto) {\n            this.upload();\n        }\n\n        if (event.type !== 'drop' && this.isIE11()) {\n          this.clearIEInput();\n        } else {\n          this.clearInputElement();\n        }\n    }\n\n    isFileSelected(file: File): boolean{\n        for(let sFile of this.files){\n            if((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isIE11() {\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n\n    validate(file: File): boolean {\n        if(this.accept && !this.isFileTypeValid(file)) {\n            this.msgs.push({\n                severity: 'error',\n                summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\n                detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\n            });\n            return false;\n        }\n\n        if(this.maxFileSize  && file.size > this.maxFileSize) {\n            this.msgs.push({\n                severity: 'error',\n                summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\n                detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    private isFileTypeValid(file: File): boolean {\n        let acceptableTypes = this.accept.split(',');\n        for(let type of acceptableTypes) {\n            let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\n                                                    : file.type == type || this.getFileExtension(file) === type;\n\n            if(acceptable) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getTypeClass(fileType: string): string {\n        return fileType.substring(0, fileType.indexOf('/'));\n    }\n\n    isWildcard(fileType: string): boolean {\n        return fileType.indexOf('*') !== -1;\n    }\n\n    getFileExtension(file: File): string {\n        return '.' + file.name.split('.').pop();\n    }\n\n    isImage(file: File): boolean {\n        return /^image\\//.test(file.type);\n    }\n\n    onImageLoad(img: any) {\n        window.URL.revokeObjectURL(img.src);\n    }\n\n    upload() {\n        if(this.customUpload) {\n            this.uploadHandler.emit({\n                files: this.files\n            });\n        }\n        else {\n            this.msgs = [];\n            let xhr = new XMLHttpRequest(),\n            formData = new FormData();\n\n            this.onBeforeUpload.emit({\n                'xhr': xhr,\n                'formData': formData\n            });\n\n            for(let i = 0; i < this.files.length; i++) {\n                formData.append(this.name, this.files[i], this.files[i].name);\n            }\n\n            xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\n                if(e.lengthComputable) {\n                  this.progress = Math.round((e.loaded * 100) / e.total);\n                }\n\n                this.onProgress.emit({originalEvent: e, progress: this.progress});\n              }, false);\n\n            xhr.onreadystatechange = () => {\n                if(xhr.readyState == 4) {\n                    this.progress = 0;\n\n                    if(xhr.status >= 200 && xhr.status < 300)\n                        this.onUpload.emit({xhr: xhr, files: this.files});\n                    else\n                        this.onError.emit({xhr: xhr, files: this.files});\n\n                    this.clear();\n                }\n            };\n\n            xhr.open(this.method, this.url, true);\n\n            this.onBeforeSend.emit({\n                'xhr': xhr,\n                'formData': formData\n            });\n\n            xhr.withCredentials = this.withCredentials;\n\n            xhr.send(formData);\n        }\n    }\n\n    clear() {\n        this.files = [];\n        this.onClear.emit();\n        this.clearInputElement();\n    }\n\n    remove(event: Event, index: number) {\n        this.clearInputElement();\n        this.onRemove.emit({originalEvent: event, file: this.files[index]});\n        this.files.splice(index, 1);\n    }\n\n    clearInputElement() {\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n            this.advancedFileInput.nativeElement.value = '';\n        }\n\n        if (this.basicFileInput && this.basicFileInput.nativeElement) {\n            this.basicFileInput.nativeElement.value = '';\n        }\n    }\n\n    clearIEInput() {\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n            this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n            this.advancedFileInput.nativeElement.value = '';\n        }\n    }\n\n    hasFiles(): boolean {\n        return this.files && this.files.length > 0;\n    }\n\n    onDragEnter(e) {\n        if(!this.disabled) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    onDragOver(e) {\n        if(!this.disabled) {\n            this.domHandler.addClass(this.content.nativeElement, 'ui-fileupload-highlight');\n            this.dragHighlight = true;\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    onDragLeave(event) {\n        if(!this.disabled) {\n            this.domHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\n        }\n    }\n\n    onDrop(event) {\n        if(!this.disabled) {\n            this.domHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\n            event.stopPropagation();\n            event.preventDefault();\n\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n            let allowDrop = this.multiple||(files && files.length === 1);\n\n            if(allowDrop) {\n                this.onFileSelect(event);\n            }\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n\n    onBlur() {\n        this.focus = false;\n    }\n\n    formatSize(bytes) {\n        if(bytes == 0) {\n            return '0 B';\n        }\n        let k = 1000,\n        dm = 3,\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n        i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    onSimpleUploaderClick(event: Event) {\n        if(this.hasFiles()) {\n            this.upload();\n        }\n    }\n\n    getBlockableElement(): HTMLElement {\n      return this.el.nativeElement.children[0];\n    }\n\n    ngOnDestroy() {\n        if(this.content && this.content.nativeElement) {\n            this.content.nativeElement.removeEventListener('dragover', this.onDragOver);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\n    exports: [FileUpload,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\n    declarations: [FileUpload]\n})\nexport class FileUploadModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/fileupload/fileupload.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {FileUploadDemo} from './fileuploaddemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: FileUploadDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class FileUploadDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">FileUpload</span>\\n        <span>FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and\\n            validations.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\n        \\n    <h3 class=\\\"first\\\">Advanced</h3>\\n    <p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\n            multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"> \\n            <ng-template pTemplate=\\\"content\\\">\\n                <ul *ngIf=\\\"uploadedFiles.length\\\">\\n                    <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\n                </ul>\\n            </ng-template>    \\n    </p-fileUpload>\\n    \\n    <h3>Basic</h3>\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\n    \\n    <h3>Basic with Auto</h3>\\n    <p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"></p-fileUpload>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;FileUploadModule&#125; from 'primeng/fileupload';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>FileUpload requires a url property as the upload target and a name to identify the files at backend.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>Multiple Uploads</h3>\\n            <p>Only one file can be selected at a time, to allow selecting multiples enable multiple option.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>DragDrop</h3>\\n            <p>File selection can also be done by dragging and dropping one or more to the content section of the component.</p>\\n            \\n            <h3>Auto Uploads</h3>\\n            <p>When auto property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" auto=\\\"auto\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>File Types</h3>\\n            <p>Selectable file types can be restricted with accept property, example below only allows images to be uploaded.\\n            Read more about other possible values <a href=\\\"http://www.w3schools.com/tags/att_input_accept.asp\\\">here</a>.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>File Size</h3>\\n            <p>Maximium file size can be restricted using maxFileSize property defined in bytes.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <p>In order to customize the default messages use invalidFileSizeMessageSummary and invalidFileSizeMessageDetail options. \\n            In summary &#123;0&#125; placeholder refers to the filename and in detail, file size.</p>\\n            <ul>\\n                <li>invalidFileSizeMessageSummary: '&#123;0&#125;: Invalid file size, '</li>\\n                <li>invalidFileSizeMessageDetail: string = 'maximum upload size is &#123;0&#125;.'</li>\\n            </ul>\\n            \\n            <h3>Templating</h3>\\n            <p>File list UI is customizable using a ng-template called \\\"file\\\" that gets the <a href=\\\"https://www.w3.org/TR/FileAPI/\\\">File</a> instance as the implicit variable.\\n                Second ng-template named \\\"content\\\" can be used to place custom content inside the content section which would be useful to implement a user interface to manage the uploaded files such as removing them.  \\n                Third and final ng-template option is \\\"toolbar\\\" to display custom content at toolbar.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\n        &lt;ng-template pTemplate=\\\"toolbar\\\"&gt;\\n            &lt;div&gt;Upload 3 Files&lt;/div&gt;\\n        &lt;/ng-template&gt;  \\n        &lt;ng-template let-file pTemplate=\\\"file\\\"&gt;\\n            &lt;div&gt;Custom UI to display a file&lt;/div&gt;\\n        &lt;/ng-template&gt; \\n        &lt;ng-template pTemplate=\\\"content\\\"&gt;\\n            &lt;div&gt;Custom UI to manage uploaded files&lt;/div&gt;\\n        &lt;/ng-template&gt;  \\n&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>Request Customization</h3>\\n            <p>XHR request to upload the files can be customized using the onBeforeUpload callback that passes\\n                the xhr instance and FormData object as event parameters.</p>\\n                \\n            <h3>Basic UI</h3>\\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\" auto=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n            <h3>Custom Upload</h3>\\n            <p>Uploading implementation can be overriden by enabling customMode property and defining a custom upload handler event.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"myUploader($event)\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nmyUploader(event) &#123;\\n    //event.files == files to upload\\n&#125;\\n</code>\\n</pre>\\n            \\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>name</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the request parameter to identify the files at backend.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>url</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Remote url to upload the files.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>method</td>\\n                            <td>string</td>\\n                            <td>POST</td>\\n                            <td>HTTP method to send the files to the url.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>multiple</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Used to select multiple files at once from file dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>accept</td>\\n                            <td>string</td>\\n                            <td>false</td>\\n                            <td>Pattern to restrict the allowed file types such as \\\"image/*\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Disables the upload functionality.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>auto</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maxFileSize</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum file size allowed in bytes.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileSizeMessageSummary</td>\\n                            <td>string</td>\\n                            <td>\\\"&#123;0&#125;: Invalid file size, \\\"</td>\\n                            <td>Summary message of the invalid fize size.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileSizeMessageDetail</td>\\n                            <td>string</td>\\n                            <td>\\\"maximum upload size is &#123;0&#125;.\\\"</td>\\n                            <td>Detail message of the invalid fize size.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileTypeMessageSummary</td>\\n                            <td>string</td>\\n                            <td>\\\"&#123;0&#125;: Invalid file type, \\\"</td>\\n                            <td>Summary message of the invalid fize type.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileTypeMessageDetail</td>\\n                            <td>string</td>\\n                            <td>\\\"allowed file types: &#123;0&#125;.\\\"</td>\\n                            <td>Detail message of the invalid fize type.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>previewWidth</td>\\n                            <td>number</td>\\n                            <td>50</td>\\n                            <td>Width of the image thumbnail in pixels.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>chooseLabel</td>\\n                            <td>string</td>\\n                            <td>Choose</td>\\n                            <td>Label of the choose button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>uploadLabel</td>\\n                            <td>string</td>\\n                            <td>Upload</td>\\n                            <td>Label of the upload button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelLabel</td>\\n                            <td>string</td>\\n                            <td>Cancel</td>\\n                            <td>Label of the cancel button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>withCredentials</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>mode</td>\\n                            <td>string</td>\\n                            <td>advanced</td>\\n                            <td>Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>customUpload</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\\n                        </tr>\\n                      <tr>\\n                            <td>showUploadButton</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Defines the visibility of upload button for Client-side FileUpload.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showCancelButton</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Defines the visibility of cancel button for Client-side FileUpload.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>files</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>List of files to be provide to the FileUpload externally.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onBeforeUpload</td>\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\n                                event.formData: FormData object.</td>\\n                            <td>Callback to invoke before file upload begins to customize the request\\n                                such as post parameters before the files.</td>\\n                        </tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n                            <td>onBeforeSend</td>\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\n                                event.formData: FormData object.</td>\\n                            <td>Callback to invoke before file send begins to customize the request\\n                                such as adding headers.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onUpload</td>\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\n                                event.files: Uploaded files.</td>\\n                            <td>Callback to invoke when file upload is complete.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onError</td>\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\n                                event.files: Files that are not uploaded.</td>\\n                            <td>Callback to invoke if file upload fails.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onClear</td>\\n                            <td>-.</td>\\n                            <td>Callback to invoke when files in queue are removed without uploading using clear all button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onRemove</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.file: Selected file.</td>\\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onSelect</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.files: List of selected files.</td>\\n                            <td>Callback to invoke when files are selected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onProgress</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.progress: Calculated progress value.</td>\\n                            <td>Callback to invoke when files are selected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>uploadHandler</td>\\n                            <td>event.files: List of selected files.</td>\\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>upload</td>\\n                            <td>-</td>\\n                            <td>Uploads the selected files.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>clear</td>\\n                            <td>-</td>\\n                            <td>Clears the files list.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-fileupload</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-fileupload-buttonbar</td>\\n                            <td>Header containing the buttons</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-fileupload-content</td>\\n                            <td>Content section</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fileupload\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\n    \\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\n&lt;p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\n        multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\n    &lt;ng-template pTemplate=\\\"content\\\"&gt;\\n        &lt;ul *ngIf=\\\"uploadedFiles.length\\\"&gt;\\n            &lt;li *ngFor=\\\"let file of uploadedFiles\\\"&gt;&#123;&#123;file.name&#125;&#125; - &#123;&#123;file.size&#125;&#125; bytes&lt;/li&gt;\\n        &lt;/ul&gt;\\n    &lt;/ng-template&gt;        \\n&lt;/p-fileUpload&gt;\\n\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"&gt;&lt;/p-fileUpload&gt;\\n\\n&lt;h3&gt;Basic with Auto&lt;/h3&gt;\\n&lt;p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class FileUploadDemo &#123;\\n\\n    msgs: Message[];\\n    \\n    uploadedFiles: any[] = [];\\n\\n    onUpload(event) &#123;\\n        for(let file of event.files) &#123;\\n            this.uploadedFiles.push(file);\\n        &#125;\\n    \\n        this.msgs = [];\\n        this.msgs.push(&#123;severity: 'info', summary: 'File Uploaded', detail: ''&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/fileupload/fileuploaddemo.html\n// module id = ./src/app/showcase/components/fileupload/fileuploaddemo.html\n// module chunks = fileuploaddemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FileUploadDemo} from './fileuploaddemo';\nimport {FileUploadDemoRoutingModule} from './fileuploaddemo-routing.module';\nimport {FileUploadModule} from '../../../components/fileupload/fileupload';\nimport {GrowlModule} from '../../../components/growl/growl';\nimport {ButtonModule} from '../../../components/button/button';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFileUploadDemoRoutingModule,\n        FileUploadModule,\n        GrowlModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tFileUploadDemo\n\t]\n})\nexport class FileUploadDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/fileupload/fileuploaddemo.module.ts","import {Component} from '@angular/core';\nimport {Message} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './fileuploaddemo.html'\n})\nexport class FileUploadDemo {\n\n    msgs: Message[];\n    \n    uploadedFiles: any[] = [];\n\n    onUpload(event) {\n        for(let file of event.files) {\n            this.uploadedFiles.push(file);\n        }\n        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\n    }\n    \n    onBasicUpload(event) {        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\n    }\n    \n    onBasicUploadAuto(event) {        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/fileupload/fileuploaddemo.ts"],"sourceRoot":"webpack:///"}