{"version":3,"sources":["./src/app/showcase/components/validation/validationdemo-routing.module.ts","./src/app/showcase/components/validation/validationdemo.html","./src/app/showcase/components/validation/validationdemo.module.ts","./src/app/showcase/components/validation/validationdemo.ts"],"names":[],"mappings":"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","file":"validationdemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ValidationDemo} from './validationdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ValidationDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ValidationDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/validation/validationdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Validation</span>\\n        <span>PrimeNG input components indicate validation errors automatically when their value is marked as invalid.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></p-growl>\\n\\n    <form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\">\\n        <p-panel header=\\\"Validate\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\">\\n                        First Name *:\\n                    </div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            Firstname is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\">\\n                        Last Name *:\\n                    </div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            Lastname is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\">\\n                        Password *:\\n                    </div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"userform.controls['password'].errors['required']\\\">Password is required</span>\\n                            <span *ngIf=\\\"userform.controls['password'].errors['minlength']\\\">Must be longer than 6 characters</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\">\\n                        Description:\\n                    </div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\">\\n                        Gender *:\\n                    </div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <p-dropdown [options]=\\\"genders\\\" formControlName=\\\"gender\\\" [autoWidth]=\\\"false\\\"></p-dropdown>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['gender'].valid&&userform.controls['gender'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            Gender is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-2\\\"></div>\\n                    <div class=\\\"ui-grid-col-6\\\">\\n                        <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                </div>\\n                <div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\">\\n                    Form Submitted\\n                    <br>\\n                    {{diagnostic}}\\n                </div>\\n            </div>\\n        </p-panel>\\n    </form>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/validation\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n        <span>View on GitHub</span>\\n    </a>\\n\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"validationdemo.ts\\\">\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;Component,OnInit&#125; from '@angular/core';\\nimport &#123;Validators,FormControl,FormGroup,FormBuilder&#125; from '@angular/forms';\\nimport &#123;Message,SelectItem&#125; from '../../../components/common/api';\\n\\n@Component(&#123;\\n    templateUrl: 'showcase/demo/validation/validationdemo.html'\\n&#125;)\\nexport class ValidationDemo implements OnInit &#123;\\n\\n    msgs: Message[] = [];\\n\\n    userform: FormGroup;\\n\\n    submitted: boolean;\\n\\n    genders: SelectItem[];\\n\\n    description: string;\\n\\n    constructor(private fb: FormBuilder) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.userform = this.fb.group(&#123;\\n            'firstname': new FormControl('', Validators.required),\\n            'lastname': new FormControl('', Validators.required),\\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\\n            'description': new FormControl(''),\\n            'gender': new FormControl('', Validators.required)\\n        &#125;);\\n\\n        this.genders = [];\\n        this.genders.push(&#123;label:'Select Gender', value:''&#125;);\\n        this.genders.push(&#123;label:'Male', value:'Male'&#125;);\\n        this.genders.push(&#123;label:'Female', value:'Female'&#125;);\\n    &#125;\\n\\n    onSubmit(value: string) &#123;\\n        this.submitted = true;\\n        this.msgs = [];\\n        this.msgs.push(&#123;severity:'info', summary:'Success', detail:'Form Submitted'&#125;);\\n    &#125;\\n\\n    get diagnostic() &#123; return JSON.stringify(this.userform.value); &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"validationdemo.html\\\">\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"&gt;&lt;/p-growl&gt;\\n\\n&lt;form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\"&gt;\\n    &lt;p-panel header=\\\"Validate\\\"&gt;\\n        &lt;div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\"&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\n                    First Name *:\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\n                    &lt;div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\"&gt;\\n                        &lt;i class=\\\"fa fa-close\\\"&gt;&lt;/i&gt;\\n                        Firstname is required\\n                    &lt;/div&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\n                    Last Name *:\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\n                    &lt;div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\"&gt;\\n                        &lt;i class=\\\"fa fa-close\\\"&gt;&lt;/i&gt;\\n                        Lastname is required\\n                    &lt;/div&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\n                    Password *:\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\n                    &lt;div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\"&gt;\\n                        &lt;i class=\\\"fa fa-close\\\"&gt;&lt;/i&gt;\\n                        &lt;span *ngIf=\\\"userform.controls['password'].errors['required']\\\"&gt;Password is required&lt;/span&gt;\\n                        &lt;span *ngIf=\\\"userform.controls['password'].errors['minlength']\\\"&gt;Must be longer than 6 characters&lt;/span&gt;\\n                    &lt;/div&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\n                    Description:\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"&gt;&lt;/textarea&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;&lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\n                    Gender *:\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;p-dropdown [options]=\\\"genders\\\" formControlName=\\\"gender\\\" [autoWidth]=\\\"false\\\"&gt;&lt;/p-dropdown&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\n                    &lt;div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['gender'].valid&&userform.controls['gender'].dirty\\\"&gt;\\n                        &lt;i class=\\\"fa fa-close\\\"&gt;&lt;/i&gt;\\n                        Gender is required\\n                    &lt;/div&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;&lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\n                    &lt;button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"&gt;&lt;/button&gt;\\n                &lt;/div&gt;\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;&lt;/div&gt;\\n            &lt;/div&gt;\\n            &lt;div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\"&gt;\\n                Form Submitted\\n                &lt;br&gt;\\n                {{diagnostic}}\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n    &lt;/p-panel&gt;\\n&lt;/form&gt;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/validation/validationdemo.html\n// module id = ./src/app/showcase/components/validation/validationdemo.html\n// module chunks = validationdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule,ReactiveFormsModule}    from '@angular/forms';\nimport {ValidationDemo} from './validationdemo';\nimport {ValidationDemoRoutingModule} from './validationdemo-routing.module';\nimport {GrowlModule} from '../../../components/growl/growl';\nimport {PanelModule} from '../../../components/panel/panel';\nimport {DropdownModule} from '../../../components/dropdown/dropdown';\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\nimport {InputTextareaModule} from '../../../components/inputtextarea/inputtextarea';\nimport {ButtonModule} from '../../../components/button/button';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\t\tValidationDemoRoutingModule,\n        GrowlModule,\n        PanelModule,\n        DropdownModule,\n        InputTextModule,\n        InputTextareaModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tValidationDemo\n\t]\n})\nexport class ValidationDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/validation/validationdemo.module.ts","import {Component,OnInit} from '@angular/core';\nimport {Validators,FormControl,FormGroup,FormBuilder} from '@angular/forms';\nimport {Message,SelectItem} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './validationdemo.html'\n})\nexport class ValidationDemo implements OnInit {\n    \n    msgs: Message[] = [];\n    \n    userform: FormGroup;\n    \n    submitted: boolean;\n    \n    genders: SelectItem[];\n        \n    description: string;\n    \n    constructor(private fb: FormBuilder) {}\n    \n    ngOnInit() {\n        this.userform = this.fb.group({\n            'firstname': new FormControl('', Validators.required),\n            'lastname': new FormControl('', Validators.required),\n            'password': new FormControl('', [Validators.required, Validators.minLength(6)]),\n            'description': new FormControl(''),\n            'gender': new FormControl('', Validators.required)\n        });\n        \n        this.genders = [];\n        this.genders.push({label:'Select Gender', value:''});\n        this.genders.push({label:'Male', value:'Male'});\n        this.genders.push({label:'Female', value:'Female'});\n    }\n    \n    onSubmit(value: string) {\n        this.submitted = true;\n        this.msgs = [];\n        this.msgs.push({severity:'info', summary:'Success', detail:'Form Submitted'});\n    }\n    \n    get diagnostic() { return JSON.stringify(this.userform.value); }\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/validation/validationdemo.ts"],"sourceRoot":"webpack:///"}