{"version":3,"sources":["./src/app/components/editor/editor.ts","./src/app/showcase/components/editor/editordemo-routing.module.ts","./src/app/showcase/components/editor/editordemo.html","./src/app/showcase/components/editor/editordemo.module.ts","./src/app/showcase/components/editor/editordemo.ts"],"names":[],"mappings":"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","file":"editordemo.module.chunk.js","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,Input,Output,EventEmitter,ContentChild,OnChanges,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Header} from '../common/shared'\nimport {DomHandler} from '../dom/domhandler';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\ndeclare var Quill: any;\n\nexport const EDITOR_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n\n@Component({\n    selector: 'p-editor',\n    template: `\n        <div [ngClass]=\"'ui-widget ui-editor-container ui-corner-all'\" [class]=\"styleClass\">\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"toolbar\">\n                <ng-content select=\"p-header\"></ng-content>\n            </div>\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"!toolbar\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\"></option>\n                        <option value=\"right\"></option>\n                        <option value=\"justify\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\"></button>\n                </span>\n            </div>\n            <div class=\"ui-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n    providers: [DomHandler,EDITOR_VALUE_ACCESSOR]\n})\nexport class Editor implements AfterViewInit,ControlValueAccessor {\n        \n    @Output() onTextChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChild(Header) toolbar;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Input() placeholder: string;\n    \n    @Input() formats: string[];\n    \n    @Output() onInit: EventEmitter<any> = new EventEmitter();\n    \n    value: string;\n    \n    _readonly: boolean;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    quill: any;\n    \n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\n\n    ngAfterViewInit() {\n        let editorElement = this.domHandler.findSingle(this.el.nativeElement ,'div.ui-editor-content'); \n        let toolbarElement = this.domHandler.findSingle(this.el.nativeElement ,'div.ui-editor-toolbar'); \n        \n        this.quill = new Quill(editorElement, {\n          modules: {\n              toolbar: toolbarElement\n          },\n          placeholder: this.placeholder,\n          readOnly: this.readonly,\n          theme: 'snow',\n          formats: this.formats\n        });\n                \n        if(this.value) {\n            this.quill.pasteHTML(this.value);\n        }\n        \n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n                if (text.length === 0) {\n                    html = null;\n                }\n\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                \n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        \n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        \n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n        \n    writeValue(value: any) : void {\n        this.value = value;\n                \n        if(this.quill) {\n            if(value)\n                this.quill.pasteHTML(value);\n            else\n                this.quill.setText('');\n        }\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    getQuill() {\n        return this.quill;\n    }\n    \n    @Input() get readonly(): boolean {\n        return this._readonly;\n    }\n\n    set readonly(val:boolean) {\n        this._readonly = val;\n        \n        if(this.quill) {\n            if(this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Editor,SharedModule],\n    declarations: [Editor]\n})\nexport class EditorModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editor/editor.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {EditorDemo} from './editordemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: EditorDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class EditorDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Editor</span>\\n        <span>Editor is rich text editor component based on Quill.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Default</h3>\\n    <p-editor [(ngModel)]=\\\"text1\\\" [style]=\\\"{'height':'320px'}\\\"></p-editor>\\n    <p>Value: {{text1||'empty'}}</p>\\n    \\n    <button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text1=null\\\"></button>\\n    \\n    <hr style=\\\"border-top:0px;border-color:#dde3e6\\\">\\n    \\n    <h3>Custom Toolbar</h3>\\n    <p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"{'height':'320px'}\\\">\\n        <p-header>\\n            <span class=\\\"ql-formats\\\">\\n                <button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\n                <button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\n                <button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\n            </span>\\n        </p-header>\\n    </p-editor>\\n    <p>Value: {{text2||'empty'}}</p>\\n    \\n    <button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text2=null\\\"></button>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;EditorModule&#125; from 'primeng/editor';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Two-way value binding is defined with ngModel.</p>\\n            \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-editor [(ngModel)]=\\\"text\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class EditorDemo &#123;\\n    \\n    text: string;\\n        \\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Model Driven Forms</h3>\\n            <p>Editor can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-editor formControlName=\\\"description\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\n</code>\\n</pre>\\n\\n            <h3>Toolbar</h3>\\n            <p>Editor provides a default toolbar with common options, to customize it define your elements inside the header element. Refer to <a href=\\\"http://quilljs.com/docs/modules/toolbar/\\\">Quill documentation</a> for available controls.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;\\n    &lt;p-header&gt;\\n        &lt;span class=\\\"ql-format-group\\\"&gt;\\n            &lt;span title=\\\"Bold\\\" class=\\\"ql-format-button ql-bold\\\"&gt;&lt;/span&gt;\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\n            &lt;span title=\\\"Italic\\\" class=\\\"ql-format-button ql-italic\\\"&gt;&lt;/span&gt;\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\n            &lt;span title=\\\"Underline\\\" class=\\\"ql-format-button ql-underline\\\"&gt;&lt;/span&gt;\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\n            &lt;span title=\\\"Strikethrough\\\" class=\\\"ql-format-button ql-strike\\\"&gt;&lt;/span&gt;\\n        &lt;/span&gt;\\n    &lt;/p-header&gt;\\n&lt;/p-editor&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the container.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the container.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>placeholder</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Placeholder text to show when editor is empty.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>readonly</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Whether to instantiate the editor to read-only mode.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>formats</td>\\n                            <td>string[]</td>\\n                            <td>null</td>\\n                            <td>Whitelist of formats to display, see <a href=\\\"http://quilljs.com/docs/formats/\\\">here</a> for available options.</td>\\n                        </tr>\\n                        \\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onTextChange</td>\\n                            <td>event.delta: Representation of the change.<br>\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".<br>\\n                                event.htmlValue: Current value as html.<br>\\n                                event.textValue: Current value as text.<br></td>\\n                            <td>Callback to invoke when the text of the editor is changed by the user.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onSelectionChange</td>\\n                            <td>event.range: Object with index and length keys indicating where the selection exists.<br>\\n                                event.oldRange: Object with index and length keys indicating where the previous selection was..<br>\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".</td>\\n                            <td>Callback to invoke when selected text of editor changes.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onInit</td>\\n                            <td>event.editor: Quill editor instance.<br>\\n                                event.oldRange: Object with index and length keys indicating where the previous selection was..<br>\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".</td>\\n                            <td>Callback to invoke after editor is initialized.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <p>Refer to <a href=\\\"http://beta.quilljs.com/docs/api/#events\\\">Quill documentation</a> for more information.</p>\\n\\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>getQuill</td>\\n                            <td>-</td>\\n                            <td>Returns the underlying quill instance.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-editor-container</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-editor-toolbar</td>\\n                            <td>Toolbar of the editor</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-editor-content</td>\\n                            <td>Editable area</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p><a href=\\\"http://quilljs.com\\\">Quill</a> Editor 1.0.</p>\\n            <p>Resources of quill needs to be added to your application. Example setup with CLI is as follows;</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\nnpm install quill --save\\n</code>\\n</pre>\\n            <p>Add Quill to scripts in angular-cli.json</p>  \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n\\\"scripts\\\": [... \\\"../node_modules/quill/dist/quill.js\\\"],\\n</code>\\n</pre>\\n            <p>Add Quill css to styles in angular-cli.json</p>  \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n\\\"styles\\\": [ ... \\\"../node_modules/quill/dist/quill.core.css\\\", \\\"../node_modules/quill/dist/quill.snow.css\\\"],\\n</code> \\n</pre>        \\n\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/editor\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Default&lt;/h3&gt;\\n&lt;p-editor [(ngModel)]=\\\"text1\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\n&lt;p&gt;Value: &#123;&#123;text1||'empty'&#125;&#125;&lt;/p&gt;\\n\\n&lt;button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text1=null\\\"&gt;&lt;/button&gt;\\n\\n&lt;hr style=\\\"border-top:0px;border-color:#dde3e6\\\"&gt;\\n\\n&lt;h3&gt;Custom Toolbar&lt;/h3&gt;\\n&lt;p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;\\n    &lt;p-header&gt;\\n        &lt;span class=\\\"ql-formats\\\"&gt;\\n            &lt;button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"&gt;&lt;/button&gt;\\n            &lt;button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"&gt;&lt;/button&gt;\\n            &lt;button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"&gt;&lt;/button&gt;\\n        &lt;/span&gt;\\n    &lt;/p-header&gt;\\n&lt;/p-editor&gt;\\n&lt;p&gt;Value: &#123;&#123;text2||'empty'&#125;&#125;&lt;/p&gt;\\n\\n&lt;button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text2=null\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;Component&#125; from '@angular/core';\\n\\n@Component(&#123;\\n    templateUrl: './editordemo.html'\\n&#125;)\\nexport class EditorDemo &#123;\\n\\n    text1: string = '&lt;div&gt;Hello World!&lt;/div&gt;&lt;div&gt;PrimeNG &lt;b&gt;Editor&lt;/b&gt; Rocks&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;';\\n    \\n    text2: string;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/editor/editordemo.html\n// module id = ./src/app/showcase/components/editor/editordemo.html\n// module chunks = editordemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {EditorDemo} from './editordemo';\nimport {EditorDemoRoutingModule} from './editordemo-routing.module';\nimport {EditorModule} from '../../../components/editor/editor';\nimport {ButtonModule} from '../../../components/button/button';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tEditorDemoRoutingModule,\n        EditorModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tEditorDemo\n\t]\n})\nexport class EditorDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './editordemo.html'\n})\nexport class EditorDemo {\n\n    text1: string = '<div>Hello World!</div><div>PrimeNG <b>Editor</b> Rocks</div><div><br></div>';\n    \n    text2: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo.ts"],"sourceRoot":"webpack:///"}