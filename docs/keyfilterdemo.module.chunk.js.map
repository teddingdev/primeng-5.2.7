{"version":3,"sources":["./src/app/components/keyfilter/keyfilter.ts","./src/app/showcase/components/keyfilter/keyfilterdemo-routing.module.ts","./src/app/showcase/components/keyfilter/keyfilterdemo.html","./src/app/showcase/components/keyfilter/keyfilterdemo.module.ts","./src/app/showcase/components/keyfilter/keyfilterdemo.ts"],"names":[],"mappings":"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","file":"keyfilterdemo.module.chunk.js","sourcesContent":["import { NgModule, Directive, ElementRef, HostBinding, HostListener, Input, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from '../dom/domhandler';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\nexport const KEYFILTER_VALIDATOR: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => KeyFilter),\n    multi: true\n};\n\n@Directive({\n    selector: '[pKeyFilter]',\n    providers: [DomHandler, KEYFILTER_VALIDATOR]\n})\nexport class KeyFilter implements Validator {\n\n    static DEFAULT_MASKS = {\n        pint: /[\\d]/,\n        'int': /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    };\n\n    static KEYS = {\n        TAB: 9,\n        RETURN: 13,\n        ESC: 27,\n        BACKSPACE: 8,\n        DELETE: 46\n    };\n\n    static SAFARI_KEYS = {\n        63234: 37, // left\n        63235: 39, // right\n        63232: 38, // up\n        63233: 40, // down\n        63276: 33, // page up\n        63277: 34, // page down\n        63272: 46, // delete\n        63273: 36, // home\n        63275: 35  // end\n    };\n\n    @Input() pValidateOnly: boolean;\n\n    regex: RegExp;\n\n    _pattern: any;\n\n    constructor(public el: ElementRef, public domHandler: DomHandler) { }\n\n    get pattern(): any {\n        return this._pattern;\n    }\n\n    @Input('pKeyFilter') set pattern(_pattern: any) {\n        this._pattern = _pattern;\n        this.regex = KeyFilter.DEFAULT_MASKS[this._pattern] || this._pattern;\n    }\n\n    isNavKeyPress(e: KeyboardEvent) {\n        let k = e.keyCode;\n        k = this.domHandler.getBrowser().safari ? (KeyFilter.SAFARI_KEYS[k] || k) : k;\n\n        return (k >= 33 && k <= 40) || k == KeyFilter.KEYS.RETURN || k == KeyFilter.KEYS.TAB || k == KeyFilter.KEYS.ESC;\n    };\n\n    isSpecialKey(e: KeyboardEvent) {\n        let k = e.keyCode;\n        let c = e.charCode;\n\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 ||(k >= 18 && k <= 20) ||\n            (this.domHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    }\n\n\n    getKey(e: KeyboardEvent) {\n        let k = e.keyCode || e.charCode;\n        return this.domHandler.getBrowser().safari ? (KeyFilter.SAFARI_KEYS[k] || k) : k;\n    }\n\n    getCharCode(e: KeyboardEvent) {\n        return e.charCode || e.keyCode || e.which;\n    };\n\n    @HostListener('keypress', ['$event'])\n    onKeyPress(e: KeyboardEvent) {\n        if(this.pValidateOnly) {\n            return;\n        }\n        \n        let browser = this.domHandler.getBrowser();\n\n        if (e.ctrlKey || e.altKey) {\n            return;\n        }\n\n        let k = this.getKey(e);\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter.KEYS.BACKSPACE || (k == KeyFilter.KEYS.DELETE && e.charCode == 0))) {\n            return;\n        }\n\n        let c = this.getCharCode(e);\n        let cc = String.fromCharCode(c);\n        let ok = true;\n\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n\n        ok = this.regex.test(cc);\n\n        if (!ok) {\n            e.preventDefault();\n        }\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        if(this.pValidateOnly) {\n            let value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                }\n            }\n        }\n    }\n    \n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [KeyFilter],\n    declarations: [KeyFilter]\n})\nexport class KeyFilterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/keyfilter/keyfilter.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {KeyFilterDemo} from './keyfilterdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{ path: '', component: KeyFilterDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class KeyFilterDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/keyfilter/keyfilterdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">KeyFilter</span>\\n        <span>KeyFilter directive restricts user input based on a regular expression.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3>Filtering</h3>\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"int\\\" placeholder=\\\"Integers\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"num\\\" placeholder=\\\"Numbers\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"money\\\" placeholder=\\\"Money\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"hex\\\" placeholder=\\\"Hex\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"alpha\\\" placeholder=\\\"Alphabetic\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"alphanum\\\" placeholder=\\\"Alphanumeric\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpecial\\\" placeholder=\\\"Block # < > * !\\\">\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpace\\\" placeholder=\\\"Block space key\\\">\\n        </div>\\n    </div>\\n\\n    <h3>Validation Mode</h3>\\n    <form #form=\\\"ngForm\\\">\\n        <label for=\\\"cc\\\" style=\\\"display:block;margin-bottom:4px\\\">Credit Card</label>\\n        <input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\">\\n        <p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"></p-message>\\n    </form>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n                    <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;KeyFilterModule&#125; from 'primeng/keyfilter';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>KeyFilter directive is applied to an input text element using pKeyFilter attribute whose value is either a built-in regular expression name or a custom one.\\n                Following input only accepts integers.</p>\\n            \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;input type=\\\"text\\\" pKeyFilter=\\\"int\\\"&gt;\\n</code>\\n</pre>\\n\\n            <h3>Built-in Filters</h3>\\n            <p>Commonly used cases have their own built-in shortcuts.</p>\\n            <ul>\\n                <li>pint: Positive integers</li>\\n                <li>int: Integers</li>\\n                <li>pnum: Positive numbers</li>\\n                <li>num: Numbers</li>\\n                <li>hex: Hexadecimal</li>\\n                <li>email: Email</li>\\n                <li>alpha: Alphabetic</li>\\n                <li>alphanum: Alphanumeric</li>\\n            </ul>\\n\\n            <h3>Custom Filter</h3>\\n            <p>A custom filter is provided by binding a regular expression, here is an example that blocks special characters including \\\"< > * !\\\"</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;input type=\\\"text\\\" pKeyFilter=\\\"noSpecial\\\"&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class KeyFilterDemo &#123;\\n\\n     noSpecial: RegExp = /^[^&lt;&gt;*!]+$/\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Validate Mode</h3>\\n            <p>Instead of blocking a single keypress, the alternative validation mode which is enabled with pValidateOnly property validates the whole input\\n                with a built-in Angular validator.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;form #form=\\\"ngForm\\\"&gt; \\n    &lt;label for=\\\"cc\\\"&gt;Credit Card&lt;/label&gt; \\n    &lt;input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\"&gt;\\n    &lt;p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"&gt;&lt;/p-message&gt;\\n&lt;/form&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>pValidateOnly</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled, instead of blocking keys, input is validated internally to test against the regular expression.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>This directive does not apply any styling.</p>\\n            \\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        \\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/keyfilter\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3&gt;Filtering&lt;/h3&gt;\\n&lt;div class=\\\"ui-g ui-fluid\\\"&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"int\\\" placeholder=\\\"Integers\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"num\\\" placeholder=\\\"Numbers\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"money\\\" placeholder=\\\"Money\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"hex\\\" placeholder=\\\"Hex\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"alpha\\\" placeholder=\\\"Alphabetic\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"alphanum\\\" placeholder=\\\"Alphanumberic\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpecial\\\" placeholder=\\\"Block # &lt; &gt; * !\\\"&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\n        &lt;input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpace\\\" placeholder=\\\"Block space key\\\"&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n&lt;h3&gt;Validation Mode&lt;/h3&gt;\\n&lt;form #form=\\\"ngForm\\\"&gt;\\n    &lt;label for=\\\"cc\\\" style=\\\"display:block;margin-bottom:4px\\\"&gt;Credit Card&lt;/label&gt;\\n    &lt;input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\"&gt;\\n    &lt;p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"&gt;&lt;/p-message&gt;\\n&lt;/form&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class KeyFilterDemo &#123;\\n\\n    blockSpecial: RegExp = /^[^&lt;&gt;*!]+$/ \\n    \\n    blockSpace: RegExp = /[^\\\\s]/; \\n    \\n    ccRegex: RegExp = /[0-9]&#123;4&#125;-[0-9]&#123;4&#125;-[0-9]&#123;4&#125;-[0-9]&#123;4&#125;$/; \\n    \\n    cc: string; \\n    \\n&#125;\\n</code>\\n</pre>\\n\\n        </p-tabPanel>\\n     </p-tabView >\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/keyfilter/keyfilterdemo.html\n// module id = ./src/app/showcase/components/keyfilter/keyfilterdemo.html\n// module chunks = keyfilterdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {KeyFilterDemo} from './keyfilterdemo';\nimport {FormsModule} from '@angular/forms';\nimport {MessageModule} from '../../../components/message/message';\nimport {KeyFilterDemoRoutingModule} from './keyfilterdemo-routing.module';\nimport {KeyFilterModule} from '../../../components/keyfilter/keyfilter';\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tKeyFilterDemoRoutingModule,\n\t\tKeyFilterModule,\n\t\tInputTextModule,\n\t\tMessageModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tKeyFilterDemo\n\t]\n})\nexport class KeyFilterDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/keyfilter/keyfilterdemo.module.ts","import {Component} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\n@Component({\n    templateUrl: './keyfilterdemo.html',\n    animations: [\n        trigger('errorState', [\n            state('hidden', style({\n                opacity: 0\n            })),\n            state('visible', style({\n                opacity: 1\n            })),\n            transition('visible => hidden', animate('400ms ease-in')),\n            transition('hidden => visible', animate('400ms ease-out'))\n        ])\n    ],\n})\nexport class KeyFilterDemo {\n\n    blockSpecial: RegExp = /^[^<>*#!]+$/\n    \n    blockSpace: RegExp = /[^\\s]/;\n\n    ccRegex: RegExp = /[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$/;\n\n    cc: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/keyfilter/keyfilterdemo.ts"],"sourceRoot":"webpack:///"}